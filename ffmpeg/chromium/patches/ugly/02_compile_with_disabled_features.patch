diff --git a/libavformat/matroskadec.c b/libavformat/matroskadec.c
index d37346b..4fd4c65 100644
--- a/libavformat/matroskadec.c
+++ b/libavformat/matroskadec.c
@@ -35,14 +35,18 @@
 /* For ff_codec_get_id(). */
 #include "riff.h"
 #include "isom.h"
+#if CONFIG_SIPR_DECODER
 #include "rmsipr.h"
+#endif
 #include "matroska.h"
 #include "libavcodec/bytestream.h"
 #include "libavcodec/mpeg4audio.h"
 #include "libavutil/intfloat.h"
 #include "libavutil/intreadwrite.h"
 #include "libavutil/avstring.h"
+#if CONFIG_LZO
 #include "libavutil/lzo.h"
+#endif
 #include "libavutil/dict.h"
 #if CONFIG_ZLIB
 #include <zlib.h>
@@ -1682,6 +1686,7 @@ static int matroska_read_header(AVFormatContext *s)
         } else if ((codec_id == AV_CODEC_ID_RA_288 || codec_id == AV_CODEC_ID_COOK ||
                     codec_id == AV_CODEC_ID_ATRAC3 || codec_id == AV_CODEC_ID_SIPR)
                     && track->codec_priv.data) {
+#if CONFIG_RA_288_DECODER || CONFIG_COOK_DECODER || CONFIG_ATRAC3_DECODER || CONFIG_SIPR_DECODER
             int flavor;
 
             ffio_init_context(&b, track->codec_priv.data,track->codec_priv.size,
@@ -1706,6 +1711,9 @@ static int matroska_read_header(AVFormatContext *s)
                 st->codec->block_align = track->audio.sub_packet_size;
                 extradata_offset = 78;
             }
+#else
+            return AVERROR_INVALIDDATA;
+#endif
         }
         track->codec_priv.size -= extradata_offset;
 
@@ -2042,8 +2050,13 @@ static int matroska_parse_rm_audio(MatroskaDemuxContext *matroska,
         }
 
         if (++track->audio.sub_packet_cnt >= h) {
-            if (st->codec->codec_id == AV_CODEC_ID_SIPR)
+            if (st->codec->codec_id == AV_CODEC_ID_SIPR) {
+#if CONFIG_SIPR_DECODER
                 ff_rm_reorder_sipr_data(track->audio.buf, h, w);
+#else
+                return AVERROR_INVALIDDATA;
+#endif
+            }
             track->audio.sub_packet_cnt = 0;
             track->audio.pkt_cnt = h*w / a;
         }
@@ -2242,8 +2255,12 @@ static int matroska_parse_block(MatroskaDemuxContext *matroska, uint8_t *data,
              st->codec->codec_id == AV_CODEC_ID_ATRAC3) &&
              st->codec->block_align && track->audio.sub_packet_size) {
 
+#if CONFIG_RA_288_DECODER || CONFIG_COOK_DECODER || CONFIG_ATRAC3_DECODER || CONFIG_SIPR_DECODER
             res = matroska_parse_rm_audio(matroska, track, st, data, size,
                                           timecode, pos);
+#else
+            res = AVERROR_INVALIDDATA;
+#endif
             if (res)
                 goto end;
 
